{
  "Parameters": {
    "SecurityGroup": {
      "Type": "String",
      "Description": "The security group ID that authorize connections to brokers. If you specify none, we will use the default security group associated with your chosen subnets.",
      "AllowedPattern": ".+"
    },
    "EngineVersion": {
      "Type": "String",
      "Description": "We recommend using the latest engine version (selected by default).",
      "AllowedPattern": "\\d\\.\\d{1,2}\\.\\d{1,2}",
      "Default": "5.15.8"
    },
    "LogsGeneral": {
      "Type": "String",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Enables general logging.",
      "Default": false
    },
    "HostInstanceType": {
      "Type": "String",
      "AllowedValues": [
        "mq.t2.micro",
        "mq.m4.large",
        "mq.m5.large",
        "mq.m5.xlarge",
        "mq.m5.2xlarge",
        "mq.m5.4xlarge"
      ],
      "Description": "Which EC2 instance do you want your brokers to run on?",
      "Default": "mq.t2.micro"
    },
    "AutoMinorVersionUpgrade": {
      "Type": "String",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Enables automatic upgrades to new minor versions for brokers, as Apache releases the versions. The automatic upgrades occur during the maintenance window of the broker or after a manual broker reboot.",
      "Default": false
    },
    "BrokerSubnetId": {
      "Type": "String",
      "Description": "The subnet ID that define into which Availability Zones and VPC the broker will be placed. A SINGLE_INSTANCE deployment requires exactly one subnet (for example, the default subnet).",
      "AllowedPattern": ".+"
    },
    "LogsAudit": {
      "Type": "String",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Enables audit logging. Every user management action made using JMS or the ActiveMQ Web Console is logged.",
      "Default": false
    },
    "Username": {
      "Type": "String",
      "Description": "The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
      "AllowedPattern": "[a-zA-Z0-9\\-._~]{2,100}",
      "MinLength": 2,
      "Default": "ylutest"
    },
    "EngineType": {
      "Type": "String",
      "AllowedValues": [
        "ACTIVEMQ"
      ],
      "Description": "We currently only support ActiveMQ (selected by default).",
      "Default": "ACTIVEMQ"
    },
    "PubliclyAccessible": {
      "Type": "String",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Enables connections from applications outside of the VPC that hosts the broker's subnets.",
      "Default": true
    },
    "Password": {
      "NoEcho": true,
      "Type": "String",
      "Description": "The password of the user. This value must be 12-250 characters long, must contain at least 4 unique characters, and can only contain alphanumeric characters (a-z, A-Z, 0-9).",
      "AllowedPattern": "^\\p{Alnum}*(\\p{Alnum})\\p{Alnum}*((?!\\1)\\p{Alnum})\\p{Alnum}*((?!\\1|\\2)\\p{Alnum})\\p{Alnum}*((?!\\1|\\2|\\3)\\p{Alnum})\\p{Alnum}*$",
      "MinLength": 12,
      "MaxLength": 250
    }
  },
  "Outputs": {
    "BrokerIp": {
      "Description": "IpAddress of Broker.",
      "Value": {
        "Fn::Select": [
          0,
          {
            "Fn::GetAtt": [
              "MQBroker",
              "IpAddresses"
            ]
          }
        ]
      }
    },
    "BrokerWebConsoleURL": {
      "Description": "WebConsoleURL for Broker.",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https:",
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    ":",
                    {
                      "Fn::Select": [
                        0,
                        {
                          "Fn::GetAtt": [
                            "MQBroker",
                            "OpenWireEndpoints"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            ":8162"
          ]
        ]
      }
    },
    "BrokerConnectionString": {
      "Description": "Use this connection string to connect to Broker. This may not be what you want and is included for demonstration purposes only!",
      "Value": {
        "Fn::Join": [
          "",
          [
            "failover:(",
            {
              "Fn::Select": [
                0,
                {
                  "Fn::GetAtt": [
                    "MQBroker",
                    "OpenWireEndpoints"
                  ]
                }
              ]
            },
            ")"
          ]
        ]
      }
    }
  },
  "Resources": {
    "ConfigurationAssociation": {
      "Type": "AWS::AmazonMQ::ConfigurationAssociation",
      "Properties": {
        "Broker": {
          "Ref": "MQBroker"
        },
        "Configuration": {
          "Revision": {
            "Fn::GetAtt": [
              "BrokerConfiguration",
              "Revision"
            ]
          },
          "Id": {
            "Ref": "BrokerConfiguration"
          }
        }
      }
    },
    "MQBroker": {
      "Type": "AWS::AmazonMQ::Broker",
      "Properties": {
        "SecurityGroups": [{
          "Ref": "SecurityGroup"
        }],
        "EngineVersion": {
          "Ref": "EngineVersion"
        },
        "DeploymentMode": "SINGLE_INSTANCE",
        "EngineType": {
          "Ref": "EngineType"
        },
        "HostInstanceType": {
          "Ref": "HostInstanceType"
        },
        "AutoMinorVersionUpgrade": {
          "Ref": "AutoMinorVersionUpgrade"
        },
        "PubliclyAccessible": {
          "Ref": "PubliclyAccessible"
        },
        "Users": [
          {
            "Username": {
              "Ref": "Username"
            },
            "Groups": [],
            "ConsoleAccess": true,
            "Password": {
              "Ref": "Password"
            }
          }
        ],
        "Logs": {
          "Audit": {
            "Ref": "LogsAudit"
          },
          "General": {
            "Ref": "LogsGeneral"
          }
        },
        "SubnetIds": [{
          "Ref": "BrokerSubnetId"
        }],
        "BrokerName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-Broker"
            ]
          ]
        }
      }
    },
    "BrokerConfiguration": {
      "Type": "AWS::AmazonMQ::Configuration",
      "Properties": {
        "EngineVersion": {
          "Ref": "EngineVersion"
        },
        "Description": "Generated configuration to build a network of brokers.",
        "Data": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n",
                "<broker xmlns=\"http://activemq.apache.org/schema/core\" start=\"false\">\n",
                "  <destinationPolicy>\n",
                "    <policyMap>\n",
                "      <policyEntries>\n",
                "        <policyEntry topic=\"&gt;\">\n",
                "          <pendingMessageLimitStrategy>\n",
                "            <constantPendingMessageLimitStrategy limit=\"5000\"/>\n",
                "          </pendingMessageLimitStrategy>\n",
                "        </policyEntry>\n",
                "      </policyEntries>\n",
                "    </policyMap>\n",
                "  </destinationPolicy>\n",
                "</broker>"
              ]
            ]
          }
        },
        "EngineType": {
          "Ref": "EngineType"
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-BrokerConfiguration"
            ]
          ]
        }
      }
    }
  }
}
